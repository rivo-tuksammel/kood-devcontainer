#!/bin/bash

# Get the host user information (UID, GID, and username)
HOST_USERNAME=$(id -un)
HOST_UID=$(id -u)
HOST_GID=$(id -g)

# This is a very stupid workaround, but there doesn't seem to be a better way to set build arguments from vscode.
ENV_FILE=".env"
ENV_DIR=".devcontainer/container"
ENV_PATH="$ENV_DIR/$ENV_FILE"


cat << "EOF"
  _  __               _     _______              _____            _        _                 
 | |/ /              | |   / /  __ \            / ____|          | |      (_)                
 | ' / ___   ___   __| |  / /| |  | | _____   _| |     ___  _ __ | |_ __ _ _ _ __   ___ _ __ 
 |  < / _ \ / _ \ / _` | / / | |  | |/ _ \ \ / / |    / _ \| '_ \| __/ _` | | '_ \ / _ \ '__|
 | . \ (_) | (_) | (_| |/ /  | |__| |  __/\ V /| |___| (_) | | | | || (_| | | | | |  __/ |   
 |_|\_\___/ \___/ \__,_/_/   |_____/ \___| \_/  \_____\___/|_| |_|\__\__,_|_|_| |_|\___|_|   

EOF

echo "Extracting host information..."
echo "Host User Information:"
echo "Host User: $HOST_USERNAME"
echo "Host UID: $HOST_UID"
echo "Host GID: $HOST_GID"
echo "Host User Information extracted successfully."
echo "Setting up environment variables..."

# Create the directory if it doesn't exist
mkdir -p ${ENV_DIR}

echo "# This file is auto-generated by the extract-env.sh script" > ${ENV_PATH}
echo "HOST_USERNAME=$(id -un)" >> ${ENV_PATH}
echo "HOST_UID=$(id -u)" >> ${ENV_PATH}
echo "HOST_GID=$(id -g)" >> ${ENV_PATH}


echo "Environment variables set up successfully."
